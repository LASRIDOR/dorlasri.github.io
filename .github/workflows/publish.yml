name: Publish

on:
  push:
    branches:
      - master

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        
      - name: Cache node-modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node-modules-${{github.sha}}

  build:
    needs: install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Load node-modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node-modules-${{github.sha}}

      - name: Compile Production Build
        run: yarn build

      - name: Upload Production Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: public

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Configure git
        run: git config --global user.name "Aaron Osher"; git config --global user.email "git@aaronosher.io"

      - name: Initialize Git Repo
        run: git init; git remote add origin https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/aaronosher/aaronosher.github.io.git

      - name: Get master
        run: git fetch origin; git checkout gh-pages

      - name: Clear all files
        run: git rm -rf ./

      - name: Download Production Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: dist

      - name: Add CNAME file
        run: echo "aaronosher.io" > CNAME

      - name: Commit changes
        run: git add .; git commit -m "Deploy $GITHUB_SHA" --allow-empty

      - name: Push changes
        run: git push origin gh-pages
